1
00:00:00,697 --> 00:00:02,419
- So now we're going to make a database,

2
00:00:02,419 --> 00:00:03,836
we're going to use SQLite Browser,

3
00:00:03,836 --> 00:00:06,714
hopefully you've downloaded
it so you can follow along.

4
00:00:06,714 --> 00:00:09,596
And I've got this handout,
this basic database handout

5
00:00:09,596 --> 00:00:11,825
that saves you from having
to type all these things

6
00:00:11,825 --> 00:00:15,720
so bring that up in your web browser.

7
00:00:15,720 --> 00:00:17,862
And so that gives you all of the commands

8
00:00:17,862 --> 00:00:20,227
that I'm going to type, now, and so

9
00:00:20,227 --> 00:00:24,394
you could pull 'em out of
the, either the web page, the,

10
00:00:25,568 --> 00:00:28,527
you could pull 'em out of the slides

11
00:00:28,527 --> 00:00:31,102
or you could pull 'em out of that.

12
00:00:31,102 --> 00:00:31,935
So.

13
00:00:32,839 --> 00:00:36,356
I'm gonna bring up the
database browser here.

14
00:00:36,356 --> 00:00:37,575
Database browser.

15
00:00:37,575 --> 00:00:39,117
Now the thing that's gonna happen,

16
00:00:39,117 --> 00:00:40,824
you'll see this has
happened on my desktop,

17
00:00:40,824 --> 00:00:42,537
I'm gonna make a new database,

18
00:00:42,537 --> 00:00:44,061
and you have to store it somewhere

19
00:00:44,061 --> 00:00:45,404
and so I'm gonna put it on my desktop

20
00:00:45,404 --> 00:00:47,904
and I'm gonna call it py4efun.

21
00:00:52,833 --> 00:00:56,001
And so we should see a
new file on my database.

22
00:00:56,001 --> 00:00:57,995
Right there, py4efun.

23
00:00:57,995 --> 00:00:59,553
Now that's a file that
you don't wanna edit

24
00:00:59,553 --> 00:01:03,720
with a text editor or
anything like that, this is,

25
00:01:04,763 --> 00:01:07,847
a database that, this
is a file that's to be

26
00:01:07,847 --> 00:01:10,738
read by SQLite Browser and nothing else.

27
00:01:10,738 --> 00:01:12,758
Okay, so we're gonna CREATE a table

28
00:01:12,758 --> 00:01:16,345
and I'm gonna make a table called Users

29
00:01:16,345 --> 00:01:18,696
with a column called name that's a text

30
00:01:18,696 --> 00:01:20,795
and a column called email, so I'm gonna,

31
00:01:20,795 --> 00:01:22,615
it's already asking me to make a table,

32
00:01:22,615 --> 00:01:24,878
I'm gonna call this Users.

33
00:01:24,878 --> 00:01:28,274
And I'm gonna add a field,
that is called name.

34
00:01:28,274 --> 00:01:30,422
And I'm gonna add a text.

35
00:01:30,422 --> 00:01:33,917
And I'm gonna add another
field called email.

36
00:01:33,917 --> 00:01:35,570
And I'm gonna make that be text.

37
00:01:35,570 --> 00:01:38,199
Now the key thing here is we are in effect

38
00:01:38,199 --> 00:01:40,646
making columns and rendering an opinion

39
00:01:40,646 --> 00:01:43,430
as to exactly what that column
is supposed to be used for

40
00:01:43,430 --> 00:01:45,602
and we're not allowed to
violate that, it's not like

41
00:01:45,602 --> 00:01:48,021
oh we'll do whatever you want, because,

42
00:01:48,021 --> 00:01:50,173
the database is optimizing its storage

43
00:01:50,173 --> 00:01:52,586
based on our contract that we're,

44
00:01:52,586 --> 00:01:54,411
we're effectively making
the contract ourselves,

45
00:01:54,411 --> 00:01:58,120
we can make these columns
anything we wanted, but,

46
00:01:58,120 --> 00:01:59,578
we're just going to, we have to,

47
00:01:59,578 --> 00:02:01,354
we're in a contract with ourselves.

48
00:02:01,354 --> 00:02:02,748
And you can see it's kind of small here,

49
00:02:02,748 --> 00:02:05,464
you can see there's a CREATE
TABLE and that's on the slide.

50
00:02:05,464 --> 00:02:09,050
And that's the SQL way of doing that.

51
00:02:09,050 --> 00:02:12,265
This user interface is
just helping us write SQL.

52
00:02:12,265 --> 00:02:14,281
So now I'm just gonna say OK.

53
00:02:14,281 --> 00:02:16,528
And if you take a look,

54
00:02:16,528 --> 00:02:18,253
you can see,

55
00:02:18,253 --> 00:02:21,110
that I now have a table Users.

56
00:02:21,110 --> 00:02:24,375
And I can look at my database
structure, table Users,

57
00:02:24,375 --> 00:02:26,210
and away we go.

58
00:02:26,210 --> 00:02:29,206
So now that is creating
it, and like I said,

59
00:02:29,206 --> 00:02:31,742
here in the slides is
the CREATE statement,

60
00:02:31,742 --> 00:02:34,959
or on the webpage there's
the CREATE statement

61
00:02:34,959 --> 00:02:36,315
that could've done it.

62
00:02:36,315 --> 00:02:37,710
Now,

63
00:02:37,710 --> 00:02:39,710
we can insert some data.

64
00:02:42,629 --> 00:02:46,232
Let's add a new record
to this database Users.

65
00:02:46,232 --> 00:02:48,399
And we'll call this guy...

66
00:02:49,629 --> 00:02:50,462
Name.

67
00:02:51,406 --> 00:02:52,239
Charles.

68
00:02:53,331 --> 00:02:54,581
Csev@umich.edu.

69
00:02:56,951 --> 00:02:57,944
So now we have a record.

70
00:02:57,944 --> 00:03:00,959
So it's kinda like a
database, spreadsheet.

71
00:03:00,959 --> 00:03:02,868
Now that's not the SQL way to do it.

72
00:03:02,868 --> 00:03:05,140
There's SQL sorta going
on in the background.

73
00:03:05,140 --> 00:03:07,744
But if we really wanna do this using SQL,

74
00:03:07,744 --> 00:03:11,077
we're going to use the INSERT statement.

75
00:03:13,615 --> 00:03:17,032
And the INSERT statement looks like this.

76
00:03:19,884 --> 00:03:23,156
The SQL syntax sometimes has extra words.

77
00:03:23,156 --> 00:03:26,672
INSERT INTO is actually two SQL keywords.

78
00:03:26,672 --> 00:03:28,363
The name of a table.

79
00:03:28,363 --> 00:03:29,663
The columns.

80
00:03:29,663 --> 00:03:31,222
And then the word VALUES

81
00:03:31,222 --> 00:03:34,002
and then one to one correspondence between

82
00:03:34,002 --> 00:03:37,468
the values and in parentheses
so it looks kinda like a,

83
00:03:37,468 --> 00:03:41,184
a tuple in Python, but we're
nowhere near Python right now.

84
00:03:41,184 --> 00:03:45,007
Okay and so, that's what we're gonna do.

85
00:03:45,007 --> 00:03:47,257
And so I'm gonna grab this.

86
00:03:48,623 --> 00:03:49,456
Kristin.

87
00:03:50,310 --> 00:03:53,681
And I'm going to go over
here to my SQLite Browser

88
00:03:53,681 --> 00:03:55,890
and say Execute SQL.

89
00:03:55,890 --> 00:03:58,975
So now I can say paste that in,

90
00:03:58,975 --> 00:04:00,882
and then hit this little run button.

91
00:04:00,882 --> 00:04:03,511
And that's going to
submit the SQL to SQLite

92
00:04:03,511 --> 00:04:05,911
and then update that file and it says,

93
00:04:05,911 --> 00:04:10,225
query executed successfully,
and away we go.

94
00:04:10,225 --> 00:04:12,322
So if I got back now
and I look at the data,

95
00:04:12,322 --> 00:04:14,927
I see that there's two things in here.

96
00:04:14,927 --> 00:04:17,191
And now I can actually
insert all the rest of these,

97
00:04:17,191 --> 00:04:19,474
let's go back to my
little bit of stuff here,

98
00:04:19,474 --> 00:04:22,546
let's put all these other rows in.

99
00:04:22,546 --> 00:04:24,213
It turns out that...

100
00:04:25,820 --> 00:04:30,756
If I go into the SQL and
I wanna do more than one,

101
00:04:30,756 --> 00:04:32,298
more than one command at a time,

102
00:04:32,298 --> 00:04:35,732
I can put a semicolon at the
end of each one of these things

103
00:04:35,732 --> 00:04:37,313
and then I can run them all four,

104
00:04:37,313 --> 00:04:39,771
all at the same time, I mean
one after another actually

105
00:04:39,771 --> 00:04:41,082
is what's going on here.

106
00:04:41,082 --> 00:04:42,696
So, boom boom boom.

107
00:04:42,696 --> 00:04:44,390
And now I take a look at
the data and look I've got

108
00:04:44,390 --> 00:04:46,415
all those things in there.

109
00:04:46,415 --> 00:04:47,272
Now.

110
00:04:47,272 --> 00:04:49,229
Eventually the thing that's gonna generate

111
00:04:49,229 --> 00:04:51,399
that SQL is a program, not us.

112
00:04:51,399 --> 00:04:53,088
This is, we're being the
database administrators

113
00:04:53,088 --> 00:04:55,019
so we're sorta doing things manually.

114
00:04:55,019 --> 00:04:56,911
Once things get going you write programs

115
00:04:56,911 --> 00:04:59,938
to do that insert over and
over and over again in Python,

116
00:04:59,938 --> 00:05:03,015
or a web language like PHP
or something like that.

117
00:05:03,015 --> 00:05:05,182
And so that is the INSERT.

118
00:05:07,121 --> 00:05:09,789
Now, we can get rid of data.

119
00:05:09,789 --> 00:05:12,810
And so I'm gonna say DELETE
FROM, that's the keyword,

120
00:05:12,810 --> 00:05:15,568
Users is the name of a table,
WHERE is a WHERE clause,

121
00:05:15,568 --> 00:05:18,424
we'll have lots of WHERE
clauses in SQL, which is,

122
00:05:18,424 --> 00:05:21,343
it's not like an IF, in
effect the delete is going

123
00:05:21,343 --> 00:05:24,917
towards the whole table
and being turned on and off

124
00:05:24,917 --> 00:05:26,123
by this WHERE clause.

125
00:05:26,123 --> 00:05:27,930
So DELETE FROM Users if you
didn't put the WHERE clause on

126
00:05:27,930 --> 00:05:30,124
will actually delete all the rows.

127
00:05:30,124 --> 00:05:33,777
But where email equals ted@umich.edu,

128
00:05:33,777 --> 00:05:35,171
well, that one is going to make it

129
00:05:35,171 --> 00:05:37,410
so it only applies to those,

130
00:05:37,410 --> 00:05:39,333
to the rows where that is true.

131
00:05:39,333 --> 00:05:41,902
So I'm gonna go over here in SQL.

132
00:05:41,902 --> 00:05:46,273
And I say DELETE FROM Users
where email equals ted@umich.edu

133
00:05:46,273 --> 00:05:47,475
and then I'm gonna run it.

134
00:05:47,475 --> 00:05:48,961
'Cause it's only one I
don't need a semicolon

135
00:05:48,961 --> 00:05:50,975
at the end of it, and now
if I go back and I look

136
00:05:50,975 --> 00:05:53,761
at the data, Ted is gone.

137
00:05:53,761 --> 00:05:54,594
Okay?

138
00:05:57,053 --> 00:05:57,889
UPDATE.

139
00:05:57,889 --> 00:05:59,639
So the UPDATE says...

140
00:06:02,389 --> 00:06:05,053
UPDATE's keyword, Users
is the name of the table,

141
00:06:05,053 --> 00:06:08,503
SET is a keyword, and then
this is column equals new value

142
00:06:08,503 --> 00:06:09,540
and then a WHERE clause.

143
00:06:09,540 --> 00:06:12,081
Again this UPDATE, if we
didn't have a WHERE clause,

144
00:06:12,081 --> 00:06:14,635
would change every row in the table.

145
00:06:14,635 --> 00:06:18,052
And so WHERE email equals csev@umich.edu.

146
00:06:23,885 --> 00:06:25,703
Oh I gotta change that, 'cause I

147
00:06:25,703 --> 00:06:27,175
already got the name to be Charles.

148
00:06:27,175 --> 00:06:28,562
So you see the name is already Charles,

149
00:06:28,562 --> 00:06:30,729
so I'll just execute here.

150
00:06:33,131 --> 00:06:35,682
Make this be Chuck so we see it.

151
00:06:35,682 --> 00:06:37,181
And then I run it.

152
00:06:37,181 --> 00:06:40,430
And then you take a look at
the data, and it's changed.

153
00:06:40,430 --> 00:06:41,632
That's it.

154
00:06:41,632 --> 00:06:43,721
That's an UPDATE statement.

155
00:06:43,721 --> 00:06:46,082
You're doing great, you're doing great.

156
00:06:46,082 --> 00:06:46,999
And so, um.

157
00:06:54,718 --> 00:06:55,703
The next thing we're going to do

158
00:06:55,703 --> 00:06:58,107
is we're gonna take a look
at how we retrieve data.

159
00:06:58,107 --> 00:06:59,517
Now this is the SELECT statement.

160
00:06:59,517 --> 00:07:02,422
SELECT *, you have a list of columns,

161
00:07:02,422 --> 00:07:04,986
and * means all columns,
FROM is a keyword,

162
00:07:04,986 --> 00:07:06,530
and then the name of a table.

163
00:07:06,530 --> 00:07:08,512
So this SELECT * FROM
Users is the kinda thing

164
00:07:08,512 --> 00:07:11,370
you type all the time, as
a matter of fact it's what

165
00:07:11,370 --> 00:07:13,921
SQLite browser is doing
internally to cause this to happen

166
00:07:13,921 --> 00:07:17,683
but we can do it by hand, by saying,

167
00:07:17,683 --> 00:07:19,781
SELECT * FROM Users and then run it.

168
00:07:19,781 --> 00:07:21,845
And so then we get a little record set

169
00:07:21,845 --> 00:07:24,201
that is those four records
that are sitting there.

170
00:07:24,201 --> 00:07:26,504
We can also throw a WHERE
clause on the end of it,

171
00:07:26,504 --> 00:07:29,853
so we'd say SELECT * FROM
Users where email equals

172
00:07:29,853 --> 00:07:31,853
csev@umich.edu and that,

173
00:07:34,228 --> 00:07:37,302
again the SELECT * FROM
Users goes at the whole table

174
00:07:37,302 --> 00:07:39,232
and the WHERE clause
goes at the whole table

175
00:07:39,232 --> 00:07:42,335
and then filters out all of
the things except one record.

176
00:07:42,335 --> 00:07:45,267
So the WHERE clause is,
send it to the table

177
00:07:45,267 --> 00:07:47,855
but then filter based
on whatever and so it,

178
00:07:47,855 --> 00:07:49,688
it only shows us that.

179
00:07:50,677 --> 00:07:51,867
Okay.

180
00:07:51,867 --> 00:07:54,708
We're cruising right along here.

181
00:07:54,708 --> 00:07:58,587
You can also put an
ORDER BY clause on there.

182
00:07:58,587 --> 00:08:02,254
So we can say SELECT *
FROM Users ORDER BY email.

183
00:08:02,254 --> 00:08:03,837
So that's a column.

184
00:08:05,319 --> 00:08:08,318
SELECT * FROM Users ORDER BY email.

185
00:08:08,318 --> 00:08:10,782
And so that orders by email.

186
00:08:10,782 --> 00:08:14,949
Or we can change it to name
and we can say descending.

187
00:08:16,333 --> 00:08:19,969
So that's the name in a descending order.

188
00:08:19,969 --> 00:08:22,256
Sorting and selecting are good things

189
00:08:22,256 --> 00:08:25,006
the databases are really good at.

190
00:08:26,949 --> 00:08:29,726
So this is the summary
of what I've told you.

191
00:08:29,726 --> 00:08:31,183
I said the databases do CREATE,

192
00:08:31,183 --> 00:08:33,538
READ, UPDATE and DELETE, CRUD.

193
00:08:33,538 --> 00:08:35,462
And we've done all those
things, except we did

194
00:08:35,462 --> 00:08:38,890
CREATE, DELETE, UPDATE,
READ, that's what we did.

195
00:08:38,890 --> 00:08:41,441
That's the summary of SQL.

196
00:08:41,441 --> 00:08:42,274
And so...

197
00:08:43,290 --> 00:08:44,865
You might be saying why did I take so long

198
00:08:44,865 --> 00:08:46,750
to learn such a simple
and elegant and beautiful

199
00:08:46,750 --> 00:08:48,957
language 'cause it's not really exciting.

200
00:08:48,957 --> 00:08:52,931
It's a extremely simple
language that's very predictable

201
00:08:52,931 --> 00:08:55,466
and you're like, that's pretty easy

202
00:08:55,466 --> 00:08:57,474
and it turns out that some of you

203
00:08:57,474 --> 00:09:00,114
may have been using SQL in situations,

204
00:09:00,114 --> 00:09:02,249
maybe with Microsoft Access or something,

205
00:09:02,249 --> 00:09:05,044
or actually type in the stuff
and you just kinda typed it

206
00:09:05,044 --> 00:09:06,257
and you never realized that you were

207
00:09:06,257 --> 00:09:08,320
learning a programming language.

208
00:09:08,320 --> 00:09:11,005
That's why I like SQL and that's
a very declarative language

209
00:09:11,005 --> 00:09:13,477
and it's very straightforward,
it's much harder to learn,

210
00:09:13,477 --> 00:09:16,795
I mean it's much easier
to learn SQL than it is

211
00:09:16,795 --> 00:09:18,493
to learn Python 'cause
in Python you have to

212
00:09:18,493 --> 00:09:20,835
figure out how loops work and
how iteration variables work

213
00:09:20,835 --> 00:09:22,846
and you'll notice there's none of that.

214
00:09:22,846 --> 00:09:26,172
And so, the, but the key
is, is we've only started

215
00:09:26,172 --> 00:09:27,245
to understand the power.

216
00:09:27,245 --> 00:09:29,499
That's the simple ability to move around

217
00:09:29,499 --> 00:09:32,345
and update data and read data randomly

218
00:09:32,345 --> 00:09:34,655
using these simple sets of commands,

219
00:09:34,655 --> 00:09:38,678
but up next we're going to
look at how you do this with

220
00:09:38,678 --> 00:09:42,845
data models and relationships
and really, multiple tables.

221
00:09:45,449 --> 00:09:48,366
(heavy rock music)

