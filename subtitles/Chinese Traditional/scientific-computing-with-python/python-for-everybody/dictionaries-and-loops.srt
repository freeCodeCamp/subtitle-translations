1
00:00:00,000 --> 00:00:01,386
- So now what we're going to do is

2
00:00:01,386 --> 00:00:04,855
we're going to switch from
just looping through strings

3
00:00:04,855 --> 00:00:06,367
but instead loop through files

4
00:00:06,367 --> 00:00:08,113
and it's going to take
a little bit of work

5
00:00:08,113 --> 00:00:09,823
cause we have to open the file,

6
00:00:09,823 --> 00:00:11,703
and we'll bring a lot of
things together at this point.

7
00:00:11,703 --> 00:00:13,853
So here would be another task and that is

8
00:00:13,853 --> 00:00:16,172
here's a bunch of text from the book

9
00:00:16,172 --> 00:00:19,506
and you can just split this into words

10
00:00:19,506 --> 00:00:22,792
and count and find out what
the most common word is

11
00:00:22,792 --> 00:00:25,974
and how many times it occurs

12
00:00:25,974 --> 00:00:27,712
so go ahead and try to
do this for a second

13
00:00:27,712 --> 00:00:29,007
feel free to pause.

14
00:00:29,007 --> 00:00:30,610
Actually don't bother pausing.

15
00:00:30,610 --> 00:00:32,921
This is too hard, we should
write a program for this.

16
00:00:32,921 --> 00:00:34,959
It's not easy, humans don't like this

17
00:00:34,959 --> 00:00:36,261
it makes you concentrate,

18
00:00:36,261 --> 00:00:39,845
and so here is a counting pattern

19
00:00:39,845 --> 00:00:41,419
where we're gonna take a line

20
00:00:41,419 --> 00:00:43,909
and then later we'll read this in a file

21
00:00:43,909 --> 00:00:47,642
and so this is just an
adaptation improvement

22
00:00:47,642 --> 00:00:49,975
of the previous thing.

23
00:00:49,975 --> 00:00:51,777
So we're gonna start
with an empty dictionary,

24
00:00:51,777 --> 00:00:53,593
we're gonna ask for a line
of text and read it in

25
00:00:53,593 --> 00:00:55,130
and then we're gonna use split.

26
00:00:55,130 --> 00:00:56,539
So remember the list of words?

27
00:00:56,539 --> 00:00:58,866
Well what we're going to
get here is a list of words.

28
00:00:58,866 --> 00:01:01,432
We'll print it out, and
we'll run this counting.

29
00:01:01,432 --> 00:01:05,529
This is the little loop for
ever word in whatever this was

30
00:01:05,529 --> 00:01:10,122
we're going to do this idiom
of either adding a new entry,

31
00:01:10,122 --> 00:01:12,392
or adding one to an existing entry

32
00:01:12,392 --> 00:01:13,731
and then printing that out.

33
00:01:13,731 --> 00:01:15,748
So let's take a look at what we get there.

34
00:01:15,748 --> 00:01:19,764
So if we run this we can give it some text

35
00:01:19,764 --> 00:01:21,812
this would be all one line,

36
00:01:21,812 --> 00:01:23,910
and then it splits it into words

37
00:01:23,910 --> 00:01:25,585
and you see that these words here

38
00:01:25,585 --> 00:01:27,824
are split, split, split, split.

39
00:01:27,824 --> 00:01:29,263
I mean that's strings and splits

40
00:01:29,263 --> 00:01:31,600
remember strings and lists, and split.

41
00:01:31,600 --> 00:01:34,738
And so now the counting is
gonna go through this list,

42
00:01:34,738 --> 00:01:36,782
"the clown ran after the..."

43
00:01:36,782 --> 00:01:38,705
and it's gonna build a histogram,

44
00:01:38,705 --> 00:01:42,361
"the, clown, one, clown, the,"

45
00:01:42,361 --> 00:01:44,619
up, up, up these things
are gonna go up right.

46
00:01:44,619 --> 00:01:46,833
That's this histogram.

47
00:01:46,833 --> 00:01:48,980
And then when it's all said and done

48
00:01:48,980 --> 00:01:51,532
we end up with the histogram
and so counts is the dictionary

49
00:01:51,532 --> 00:01:53,997
that ends up with the histogram and we can

50
00:01:53,997 --> 00:01:57,164
sort of by inspection see "oh
that is the most common word

51
00:01:57,164 --> 00:01:59,144
and there are seven of those."

52
00:01:59,144 --> 00:02:01,318
So if we sorta take a look at this,

53
00:02:01,318 --> 00:02:03,224
we start out, we make a dictionary,

54
00:02:03,224 --> 00:02:06,891
we read in a line of
text, the text goes in,

55
00:02:07,907 --> 00:02:10,934
and then we split that and
we print the words out.

56
00:02:10,934 --> 00:02:12,600
So these are the words, right.

57
00:02:12,600 --> 00:02:14,024
Then we have a four loop

58
00:02:14,024 --> 00:02:15,521
that's gonna loop through all those things

59
00:02:15,521 --> 00:02:17,231
and then produce a dictionary.

60
00:02:17,231 --> 00:02:19,072
And when we print the dictionary out,

61
00:02:19,072 --> 00:02:20,407
that's what we're gonna get.

62
00:02:20,407 --> 00:02:22,222
And that is seven, okay?

63
00:02:22,222 --> 00:02:24,361
So that's one line of text.

64
00:02:24,361 --> 00:02:28,333
That's how you walk across
the words in a line of text

65
00:02:28,333 --> 00:02:30,862
after you split the line
into separate words.

66
00:02:30,862 --> 00:02:33,977
Now we're gonna look at
ways that you can loop

67
00:02:33,977 --> 00:02:35,924
through dictionaries,
we just produced a look

68
00:02:35,924 --> 00:02:37,409
that can build a dictionary

69
00:02:37,409 --> 00:02:39,442
but now we're gonna look at a dictionary.

70
00:02:39,442 --> 00:02:41,676
So we'll start with a
very very simple example

71
00:02:41,676 --> 00:02:43,599
and then we'll work to a
slightly more complex example.

72
00:02:43,599 --> 00:02:46,006
So here's a dictionary just a constant,

73
00:02:46,006 --> 00:02:49,256
Chuck is one, Fred's 42, and Jan's 100.

74
00:02:50,314 --> 00:02:52,956
So we're gonna use a
definite loop with the four

75
00:02:52,956 --> 00:02:54,318
four key in counts.

76
00:02:54,318 --> 00:02:57,287
Now it doesn't have to remain
key but key is a good name.

77
00:02:57,287 --> 00:02:59,844
Cause these are, these
are keys and values.

78
00:02:59,844 --> 00:03:01,687
K, V, K, V.

79
00:03:01,687 --> 00:03:04,001
Keys and values I just
mentally think of this

80
00:03:04,001 --> 00:03:06,096
as keys and values and keys and values.

81
00:03:06,096 --> 00:03:09,254
So this iteration
variable's gonna walk keys

82
00:03:09,254 --> 00:03:12,612
it's not gonna walk the values
it's gonna walk the keys

83
00:03:12,612 --> 00:03:16,536
Chuck, Fred, Jan, not necessarily
in that particular order

84
00:03:16,536 --> 00:03:18,479
as you see it goes Jan,
Chuck, Fred because

85
00:03:18,479 --> 00:03:20,635
just cause I typed it in in this order,

86
00:03:20,635 --> 00:03:22,664
it's not like a list it
doesn't stay in that order

87
00:03:22,664 --> 00:03:25,299
it might move around a little
bit as we add data to it

88
00:03:25,299 --> 00:03:26,738
or as we set the data up.

89
00:03:26,738 --> 00:03:30,036
So you can, in the loop
you can get the key

90
00:03:30,036 --> 00:03:32,899
and so that's what prints
out the Jan, Chuck, Fred

91
00:03:32,899 --> 00:03:35,451
but then you can also get
the corresponding count

92
00:03:35,451 --> 00:03:38,461
for each one of these by just
pulling it out of the array

93
00:03:38,461 --> 00:03:41,215
I mean pulling it out
of the dictionary right.

94
00:03:41,215 --> 00:03:43,574
And so we can pull out
the corresponding value

95
00:03:43,574 --> 00:03:45,526
and so we print out Jan
100, Chuck one, Fred two

96
00:03:45,526 --> 00:03:47,414
and that runs this loop three times.

97
00:03:47,414 --> 00:03:50,848
So if you just use the n and
you get a dictionary here

98
00:03:50,848 --> 00:03:52,526
remember all the different things

99
00:03:52,526 --> 00:03:54,827
we've been able to put there
on the end of a four loop

100
00:03:54,827 --> 00:03:58,147
and the dictionary is
another thing we can put on

101
00:03:58,147 --> 00:04:00,596
and we get a list of keys.

102
00:04:00,596 --> 00:04:02,234
Now there's a couple of methods

103
00:04:02,234 --> 00:04:03,862
that allow us to get the keys.

104
00:04:03,862 --> 00:04:08,284
And so we have, you know we
can say turn this into a list

105
00:04:08,284 --> 00:04:10,194
and we get a list of the keys.

106
00:04:10,194 --> 00:04:12,346
So this is a dictionary,
the same dictionary,

107
00:04:12,346 --> 00:04:13,641
we get a list of the keys.

108
00:04:13,641 --> 00:04:14,853
You can also get the list of the keys

109
00:04:14,853 --> 00:04:16,527
by using the keys method,

110
00:04:16,527 --> 00:04:18,783
so that's take this dictionary jjj

111
00:04:18,783 --> 00:04:21,124
and give me all the keys
which gives me a list

112
00:04:21,124 --> 00:04:22,529
which is kinda the same thing.

113
00:04:22,529 --> 00:04:24,004
And then we can ask for the values

114
00:04:24,004 --> 00:04:26,231
and they give me just then the values

115
00:04:26,231 --> 00:04:28,610
extracted out of this
dictionary so that's nice.

116
00:04:28,610 --> 00:04:30,733
Now the one thing is

117
00:04:30,733 --> 00:04:32,981
is that while I said you
can't predict the order

118
00:04:32,981 --> 00:04:34,778
if in two statements you ask

119
00:04:34,778 --> 00:04:36,361
for the keys and then the values

120
00:04:36,361 --> 00:04:38,829
they at least come out in the same order

121
00:04:38,829 --> 00:04:40,341
even though you can't
necessarily predict the order

122
00:04:40,341 --> 00:04:43,282
that they come out, they
come out in the same order.

123
00:04:43,282 --> 00:04:46,426
And then there is a third
thing that we can do

124
00:04:46,426 --> 00:04:49,349
and that is ask for the items.

125
00:04:49,349 --> 00:04:52,144
We can say give me the items.

126
00:04:52,144 --> 00:04:55,737
And that gives us a
list, this is our first

127
00:04:55,737 --> 00:04:59,737
really kind of composite
combined data structure

128
00:05:01,227 --> 00:05:03,555
where it is a list, a three item list.

129
00:05:03,555 --> 00:05:05,845
Zero, one, two.

130
00:05:05,845 --> 00:05:09,049
And inside that there are what
is what are called two tuples

131
00:05:09,049 --> 00:05:12,541
Jan maps to 100, Chuck maps
to one, Fred maps to 42.

132
00:05:12,541 --> 00:05:15,600
Coming up next we're gonna
have a whole chapter on that

133
00:05:15,600 --> 00:05:18,064
and so just take a look
at that for the moment

134
00:05:18,064 --> 00:05:21,850
and we will come back to
that in some detail later.

135
00:05:21,850 --> 00:05:24,101
This whole items idea

136
00:05:24,101 --> 00:05:26,957
that gives us back a
list of key value pairs,

137
00:05:26,957 --> 00:05:29,800
cause it's not just a list
of keys or a list of values,

138
00:05:29,800 --> 00:05:31,306
it's actually a list of key value pairs

139
00:05:31,306 --> 00:05:34,976
allows us to write in python a
very clever and elegant loop.

140
00:05:34,976 --> 00:05:39,012
What we can do is actually,
this items gives us that

141
00:05:39,012 --> 00:05:42,747
each item in the list
has a key and a value

142
00:05:42,747 --> 00:05:45,530
and we can actually take
two iteration variables.

143
00:05:45,530 --> 00:05:48,171
For aaa, bbb this is
two iteration variables

144
00:05:48,171 --> 00:05:50,439
and if you're coming from
another programming language

145
00:05:50,439 --> 00:05:52,431
this is super cool and
it's a python only feature

146
00:05:52,431 --> 00:05:54,763
I never have seen another
language that's capable

147
00:05:54,763 --> 00:05:57,285
of doing something this
simple and that elegantly.

148
00:05:57,285 --> 00:06:00,087
So what this basically
does is says, we're gonna

149
00:06:00,087 --> 00:06:02,945
simultaneously advance these
two iteration variables.

150
00:06:02,945 --> 00:06:05,606
This is gonna be the key and
the value, the k and the v.

151
00:06:05,606 --> 00:06:08,009
Key and the value it's gonna be Chuck one,

152
00:06:08,009 --> 00:06:12,092
then they're both gonna
advance Fred 42, Jan 100,

153
00:06:13,429 --> 00:06:15,410
and so that means in this
simple loop if we just

154
00:06:15,410 --> 00:06:17,510
print them out we're gonna
get the key value pairs

155
00:06:17,510 --> 00:06:18,657
of course in the order,

156
00:06:18,657 --> 00:06:20,910
and so it's sort of aaa and bbb

157
00:06:20,910 --> 00:06:24,541
simultaneously walk down
these key value pairs.

158
00:06:24,541 --> 00:06:26,324
And so that's really pretty,

159
00:06:26,324 --> 00:06:28,601
and it makes for a very succinct loop

160
00:06:28,601 --> 00:06:31,946
syntax is a little sort of
disquieting when you first see it

161
00:06:31,946 --> 00:06:33,860
but it's a super elegant thing

162
00:06:33,860 --> 00:06:35,901
and you just have to say items,

163
00:06:35,901 --> 00:06:38,997
if you don't say items
you just get the keys

164
00:06:38,997 --> 00:06:41,172
if you say items you
get the key value pairs

165
00:06:41,172 --> 00:06:43,504
and you have to have
two iteration variables

166
00:06:43,504 --> 00:06:45,844
if you don't have two iteration
variables and use items

167
00:06:45,844 --> 00:06:47,433
it'll complain and say
"what are you doing?

168
00:06:47,433 --> 00:06:48,682
I'm giving you two things

169
00:06:48,682 --> 00:06:50,423
and you don't have two
variables to receive them"

170
00:06:50,423 --> 00:06:54,590
so two iteration variables and
items are basically related.

171
00:06:56,344 --> 00:06:58,773
Now, we're going to take a look,

172
00:06:58,773 --> 00:07:02,783
and this is code that I showed
you perhaps many weeks ago

173
00:07:02,783 --> 00:07:06,714
about I said this is little
story about how to read a file

174
00:07:06,714 --> 00:07:08,149
and count all the words in the file.

175
00:07:08,149 --> 00:07:11,180
And now we're back to
it, and at this point

176
00:07:11,180 --> 00:07:13,639
you should understand every
single character of this program

177
00:07:13,639 --> 00:07:16,066
every single concept of the program,

178
00:07:16,066 --> 00:07:19,036
you should literally stare
at this and look at it,

179
00:07:19,036 --> 00:07:21,907
code it, play with it, until
you absolutely understand it.

180
00:07:21,907 --> 00:07:23,795
So let's take a look.

181
00:07:23,795 --> 00:07:26,628
Again I showed you this weeks ago.

182
00:07:28,152 --> 00:07:30,010
So we're gonna ask for a file name,

183
00:07:30,010 --> 00:07:31,851
then we're gonna open the file name,

184
00:07:31,851 --> 00:07:34,294
then we're gonna make an empty dictionary

185
00:07:34,294 --> 00:07:36,425
again this is all stuff
you've done before.

186
00:07:36,425 --> 00:07:38,591
And then we're gonna have
an iteration variable

187
00:07:38,591 --> 00:07:41,626
that's gonna go through
the lines in the file.

188
00:07:41,626 --> 00:07:44,030
So line is gonna go line, line, line,

189
00:07:44,030 --> 00:07:46,499
then we are going to split that line,

190
00:07:46,499 --> 00:07:49,817
each line into words,
chop, chop, chop, chop.

191
00:07:49,817 --> 00:07:53,896
So that's words is the list
of the words in one line

192
00:07:53,896 --> 00:07:54,852
we're inside of a loop

193
00:07:54,852 --> 00:07:56,566
that's gonna go through all of the lines

194
00:07:56,566 --> 00:07:58,254
and then what we're going to do,

195
00:07:58,254 --> 00:08:01,971
is we're going to have the word iteration

196
00:08:01,971 --> 00:08:04,350
iterate through each word in the line.

197
00:08:04,350 --> 00:08:06,845
And then what we're gonna do
is take each word in the line

198
00:08:06,845 --> 00:08:10,434
and we're gonna do this histogram.

199
00:08:10,434 --> 00:08:13,560
This is gonna run not just for every line

200
00:08:13,560 --> 00:08:15,104
but for every word in every line

201
00:08:15,104 --> 00:08:17,053
so we have a nested loop for every line

202
00:08:17,053 --> 00:08:19,469
then we split it and then
we go across the line

203
00:08:19,469 --> 00:08:20,773
so it's almost like a
typewriter where we go

204
00:08:20,773 --> 00:08:24,417
ch-ch-ch-ch-ch ding!
Ch-ch-ch-ch-ch ding! Ch-ch-ch--

205
00:08:24,417 --> 00:08:25,286
and that's what we're doing.

206
00:08:25,286 --> 00:08:29,453
Ch-ch-ch-ch ding!
Ch-ch-ch-ch ding! Ch-ch ding!

207
00:08:30,376 --> 00:08:31,975
So it's like the outer loop

208
00:08:31,975 --> 00:08:34,115
is going down, down, down the lines

209
00:08:34,115 --> 00:08:37,007
and the inner loop is going
across, across, across the words

210
00:08:37,007 --> 00:08:40,325
and eventually we are going
to see in this last line

211
00:08:40,325 --> 00:08:42,079
every single word in the file.

212
00:08:42,079 --> 00:08:45,116
And we're gonna do the
accounts get word plus one

213
00:08:45,116 --> 00:08:48,570
which is our magic
histogram making line that,

214
00:08:48,570 --> 00:08:50,260
if you don't remember what that is

215
00:08:50,260 --> 00:08:52,018
go back a couple of slides
I just talked about it.

216
00:08:52,018 --> 00:08:53,630
At this point in the code,

217
00:08:53,630 --> 00:08:55,247
and it's important to be
able to draw these lines,

218
00:08:55,247 --> 00:08:57,971
at this point in the code
you have the histogram

219
00:08:57,971 --> 00:08:59,457
and it's in the variable counts.

220
00:08:59,457 --> 00:09:02,678
Now, we wanna find the largest one.

221
00:09:02,678 --> 00:09:06,845
We have written loops that
can find the largest in a list

222
00:09:07,748 --> 00:09:10,022
but now we wanna find the largest value

223
00:09:10,022 --> 00:09:13,422
in the key value pairs of a dictionary.

224
00:09:13,422 --> 00:09:15,317
So we're gonna start with

225
00:09:15,317 --> 00:09:17,708
we're gonna know what
the largest count is,

226
00:09:17,708 --> 00:09:20,288
and the largest word that has that count

227
00:09:20,288 --> 00:09:21,731
and we're gonna set 'em both to none

228
00:09:21,731 --> 00:09:22,564
cause we're gonna prime our loop

229
00:09:22,564 --> 00:09:24,775
we have to prime our loop
and we're gonna say to none.

230
00:09:24,775 --> 00:09:26,811
So then we're gonna write
one of these cool things

231
00:09:26,811 --> 00:09:28,708
that say for word comma count,

232
00:09:28,708 --> 00:09:31,151
so word and count are gonna
go through the key value pairs

233
00:09:31,151 --> 00:09:32,887
because we've got items here,

234
00:09:32,887 --> 00:09:35,012
so it's gonna go through
the key value pairs

235
00:09:35,012 --> 00:09:37,600
loop through each key
value, whatever it was.

236
00:09:37,600 --> 00:09:39,598
There could be 1,000,000 words in here,

237
00:09:39,598 --> 00:09:41,053
we're gonna go through every one.

238
00:09:41,053 --> 00:09:43,295
Now what we're gonna do,
is we're going to make sure

239
00:09:43,295 --> 00:09:46,657
the key big count is the
current largest count

240
00:09:46,657 --> 00:09:49,346
we've seen so far, and if it's none

241
00:09:49,346 --> 00:09:52,661
well then we haven't seen
anything or the count

242
00:09:52,661 --> 00:09:55,852
we just read is greater
than the big count so far

243
00:09:55,852 --> 00:09:58,370
we are going to jump in
and this is sort of like

244
00:09:58,370 --> 00:10:00,913
oh this is a new personal best count

245
00:10:00,913 --> 00:10:02,786
for this particular data set.

246
00:10:02,786 --> 00:10:05,672
And so we're gonna remember
the word in big word

247
00:10:05,672 --> 00:10:07,584
and we're gonna remember
the count in big count.

248
00:10:07,584 --> 00:10:11,030
So this is just a max
loop, it's a maximum loop

249
00:10:11,030 --> 00:10:14,365
with the extra thing that
we're recording in addition

250
00:10:14,365 --> 00:10:17,453
to what count is the
largest, what the word

251
00:10:17,453 --> 00:10:19,988
that was associated with
that count recording it.

252
00:10:19,988 --> 00:10:22,054
So again this is the
starting part of the loop

253
00:10:22,054 --> 00:10:23,149
we're gonna do some work,

254
00:10:23,149 --> 00:10:24,732
and then when we exit the bottom of this,

255
00:10:24,732 --> 00:10:27,342
big word is going to be the
word that is the most common

256
00:10:27,342 --> 00:10:29,606
and big count is the number of times.

257
00:10:29,606 --> 00:10:31,646
And so if we run a file we see

258
00:10:31,646 --> 00:10:34,481
"oh in that file to is
the most common word

259
00:10:34,481 --> 00:10:35,987
and it's 16 times."

260
00:10:35,987 --> 00:10:38,110
If we run the clown file,

261
00:10:38,110 --> 00:10:42,169
well "the" is the most
common word and seven.

262
00:10:42,169 --> 00:10:43,956
This could have a very large file

263
00:10:43,956 --> 00:10:46,764
and give you the most common word.

264
00:10:46,764 --> 00:10:51,735
And so that is sort of a
really good application

265
00:10:51,735 --> 00:10:54,067
of dictionaries.

266
00:10:54,067 --> 00:10:56,276
So dictionaries are the
most powerful, well,

267
00:10:56,276 --> 00:11:00,443
they're the most powerful
collection we've seen so far.

268
00:11:01,802 --> 00:11:04,059
It is good to see both
lists and dictionaries

269
00:11:04,059 --> 00:11:06,103
to understand what collections are

270
00:11:06,103 --> 00:11:08,881
they are things inside of python

271
00:11:08,881 --> 00:11:11,404
that can handle more than
one item inside of it

272
00:11:11,404 --> 00:11:13,229
and we'll learn about another collection,

273
00:11:13,229 --> 00:11:14,511
about tuples in a second.

274
00:11:14,511 --> 00:11:18,192
Just understand the get
method because that leads

275
00:11:18,192 --> 00:11:19,879
to very compact code.

276
00:11:19,879 --> 00:11:22,528
Understanding their
various ways to iterate

277
00:11:22,528 --> 00:11:24,949
through dictionaries,
so we've learned a lot.

278
00:11:24,949 --> 00:11:28,689
But in the next section
we will learn even more

279
00:11:28,689 --> 00:11:30,541
and put these together and do some sorting

280
00:11:30,541 --> 00:11:31,714
and do some other stuff,

281
00:11:31,714 --> 00:11:35,881
and really start to see the
real power of dictionaries.

282
00:11:36,738 --> 00:11:40,905
(jazz music plays)

