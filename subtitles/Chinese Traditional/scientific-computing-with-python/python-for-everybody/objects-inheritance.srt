1
00:00:00,384 --> 00:00:02,238
- So the last topic we'll talk about,

2
00:00:02,238 --> 00:00:03,488
here in object orientation,

3
00:00:03,488 --> 00:00:05,807
is the notion of inheritance.

4
00:00:05,807 --> 00:00:08,047
This is a form of code re-use.

5
00:00:08,047 --> 00:00:10,269
It's one of the more advanced aspects

6
00:00:10,269 --> 00:00:11,951
of object orientated programming,

7
00:00:11,951 --> 00:00:14,831
so just kind of understand
what it is at a high level

8
00:00:14,831 --> 00:00:16,670
and then you'll know where
you need to come back to

9
00:00:16,670 --> 00:00:20,346
when you need to learn a
bit more about inheritance.

10
00:00:20,346 --> 00:00:23,244
So, the idea is instead of
making a new class from scratch,

11
00:00:23,244 --> 00:00:25,774
we actually make a new class by starting

12
00:00:25,774 --> 00:00:27,188
with an existing class.

13
00:00:27,188 --> 00:00:28,611
We are extending it,

14
00:00:28,611 --> 00:00:31,514
or another word for this is subclassing.

15
00:00:31,514 --> 00:00:34,349
It's sort of a situation
where you're like,

16
00:00:34,349 --> 00:00:36,528
I've got this code and I've got this data

17
00:00:36,528 --> 00:00:38,974
and I just need to add a few things to it

18
00:00:38,974 --> 00:00:40,990
and I'll then I'll have a whole new thing.

19
00:00:40,990 --> 00:00:42,655
As you design objects,

20
00:00:42,655 --> 00:00:44,909
and what we call object hierarchies,

21
00:00:44,909 --> 00:00:46,114
you often do this.

22
00:00:46,114 --> 00:00:49,364
It's a form of real clever code re-use.

23
00:00:50,575 --> 00:00:54,073
Don't necessarily think
that you're supposed to know

24
00:00:54,073 --> 00:00:56,670
when to use this or why to use this

25
00:00:56,670 --> 00:01:00,526
because right now it's just
terminology, just terminology.

26
00:01:00,526 --> 00:01:03,036
We have, what call these as
parent child relationships.

27
00:01:03,036 --> 00:01:04,736
The original class is called a parent

28
00:01:04,736 --> 00:01:07,660
and the new class is
called the child class.

29
00:01:07,660 --> 00:01:10,865
Subclasses are another word for this,

30
00:01:10,865 --> 00:01:12,988
you have a class and then you subclass it.

31
00:01:12,988 --> 00:01:15,347
I think extending,
inheriting and parent/child

32
00:01:15,347 --> 00:01:19,502
are probably better ways of
expressing it than subclassing.

33
00:01:19,502 --> 00:01:21,121
So, here's a bit of code.

34
00:01:21,121 --> 00:01:22,877
Let's take a look at this.

35
00:01:22,877 --> 00:01:24,891
This code is unchanged.

36
00:01:24,891 --> 00:01:25,838
It's the party animal code

37
00:01:25,838 --> 00:01:27,727
that we've been saying all along.

38
00:01:27,727 --> 00:01:31,375
It's the one that we
construct and put a name in.

39
00:01:31,375 --> 00:01:33,375
Now what we're going to do is extend it.

40
00:01:33,375 --> 00:01:35,038
You'll notice that this code down here

41
00:01:35,038 --> 00:01:37,108
is the part that is doing the extending.

42
00:01:37,108 --> 00:01:39,773
We're making a new class, football fan,

43
00:01:39,773 --> 00:01:43,389
and by putting in parentheses
before the colon party animal,

44
00:01:43,389 --> 00:01:46,494
that says football fan inherits everything

45
00:01:46,494 --> 00:01:49,723
that is party animal, meaning
the X, the name, the init,

46
00:01:49,723 --> 00:01:52,062
the party, all those methods and data

47
00:01:52,062 --> 00:01:53,996
are sitting there.

48
00:01:53,996 --> 00:01:56,067
Now we're going to add a new variable.

49
00:01:56,067 --> 00:01:58,372
Football fan has, in addition
to all those other variables,

50
00:01:58,372 --> 00:02:02,402
it has points and it has
a touchdown method and

51
00:02:02,402 --> 00:02:06,485
self points is added, we
add seven to the points,

52
00:02:07,405 --> 00:02:10,241
and then we call the
party and that does that.

53
00:02:10,241 --> 00:02:13,138
So, this is calling this
method because football fan

54
00:02:13,138 --> 00:02:16,620
includes X, name and party
and init and everything

55
00:02:16,620 --> 00:02:18,545
and all this stuff, this constructor.

56
00:02:18,545 --> 00:02:22,514
So this football fan is
really an amalgamation

57
00:02:22,514 --> 00:02:24,098
of all these things together.

58
00:02:24,098 --> 00:02:26,765
Party animal is just this stuff.

59
00:02:28,146 --> 00:02:30,700
So we now have two classes,
we don't just have one.

60
00:02:30,700 --> 00:02:33,071
We didn't erase the party animal class.

61
00:02:33,071 --> 00:02:35,246
We take a look at the
code that we can run here,

62
00:02:35,246 --> 00:02:38,371
we can say oh, okay, let's
make a party animal, Sally,

63
00:02:38,371 --> 00:02:42,113
and so that constructs
an object like this,

64
00:02:42,113 --> 00:02:44,928
and then stores that in S,

65
00:02:44,928 --> 00:02:47,871
with an X starting out zero.

66
00:02:47,871 --> 00:02:49,556
Then we call S party.

67
00:02:49,556 --> 00:02:52,496
Oops, I better change that color.

68
00:02:52,496 --> 00:02:55,152
Starts out at zero and then
we call the party method

69
00:02:55,152 --> 00:02:57,409
and that changes it to one.

70
00:02:57,409 --> 00:03:00,076
So, this bit of code, it's as if

71
00:03:00,929 --> 00:03:02,268
this part doesn't matter at all

72
00:03:02,268 --> 00:03:04,958
because it is a party animal,
it's not a football fan.

73
00:03:04,958 --> 00:03:08,875
Now, if we take a look
at this code, down here,

74
00:03:10,934 --> 00:03:12,671
take this code down here,

75
00:03:12,671 --> 00:03:16,739
we're going to construct a
football fan and pass in Jim.

76
00:03:16,739 --> 00:03:19,348
But, football fan has no
underscore, underscore, init,

77
00:03:19,348 --> 00:03:22,830
so that actually uses the
underscore init from party animal

78
00:03:22,830 --> 00:03:26,176
because we extended party
animal to make football fan.

79
00:03:26,176 --> 00:03:28,958
So we inherited all the
good that was in there.

80
00:03:28,958 --> 00:03:31,568
There it's going to make
a name, a variable X,

81
00:03:31,568 --> 00:03:33,232
which is going to start at zero,

82
00:03:33,232 --> 00:03:35,587
a variable name that's
going to have Jim in it

83
00:03:35,587 --> 00:03:38,720
and a variable points that's
going to have a zero in it.

84
00:03:38,720 --> 00:03:42,094
This J variable has more things in it

85
00:03:42,094 --> 00:03:44,128
than the S variable has.

86
00:03:44,128 --> 00:03:46,378
So, we can call the J party

87
00:03:48,403 --> 00:03:52,640
and if we call J party, that
goes here and adds one to X.

88
00:03:52,640 --> 00:03:55,583
So, it adds one to X, and
then we call J touchdown.

89
00:03:55,583 --> 00:03:59,750
Well, that comes down in here
and adds seven to the points,

90
00:04:01,187 --> 00:04:03,925
and then calls party within us.

91
00:04:03,925 --> 00:04:06,805
So self.party is a current object,

92
00:04:06,805 --> 00:04:09,779
i.e. self and J are the same thing.

93
00:04:09,779 --> 00:04:12,481
Self.party and then it goes up here

94
00:04:12,481 --> 00:04:16,225
and passes self in and
it adds one to the X,

95
00:04:16,225 --> 00:04:18,691
in this case, of this J variable.

96
00:04:18,691 --> 00:04:22,272
So this becomes two and
that's where it prints out.

97
00:04:22,272 --> 00:04:26,140
It prints out seven and
two and away you go.

98
00:04:26,140 --> 00:04:30,065
So, it's a way for you to
kind of take all this stuff

99
00:04:30,065 --> 00:04:34,307
and stuff it into a class,
by making a new class

100
00:04:34,307 --> 00:04:36,030
and just add the extending bits,

101
00:04:36,030 --> 00:04:39,173
the bits that are in
addition to the other stuff.

102
00:04:39,173 --> 00:04:42,740
So, like I said, inheritance is a powerful

103
00:04:42,740 --> 00:04:44,083
and wonderful concept.

104
00:04:44,083 --> 00:04:46,916
It is an excellent form of re-use,

105
00:04:48,878 --> 00:04:52,804
but basically the whole
purpose of this lecture

106
00:04:52,804 --> 00:04:55,413
was so that I could, in the
future, just use these words

107
00:04:55,413 --> 00:04:58,291
and you would understand
them, as compared to,

108
00:04:58,291 --> 00:04:59,308
I just want to say method.

109
00:04:59,308 --> 00:05:00,477
I've been saying method all along,

110
00:05:00,477 --> 00:05:02,530
and it's high time that I defined it.

111
00:05:02,530 --> 00:05:05,185
So, let's just review one last time.

112
00:05:05,185 --> 00:05:08,990
Class is a template, it
is not actually a thing,

113
00:05:08,990 --> 00:05:10,980
it is a shape of a thing.

114
00:05:10,980 --> 00:05:13,346
We define it and say when
we make one of these things

115
00:05:13,346 --> 00:05:14,848
it's going to have these variable in it,

116
00:05:14,848 --> 00:05:17,059
it's going to have these methods in it.

117
00:05:17,059 --> 00:05:19,500
Attributes, variables within a class.

118
00:05:19,500 --> 00:05:21,958
Method is a function that
is inside of a class.

119
00:05:21,958 --> 00:05:25,477
Object is once we construct a class,

120
00:05:25,477 --> 00:05:27,267
we get back an object.

121
00:05:27,267 --> 00:05:31,776
So object here is the snowman cookies.

122
00:05:31,776 --> 00:05:35,005
Class is the snowman cookie cutter.

123
00:05:35,005 --> 00:05:39,676
Constructor is a bit of code
that sets up our object,

124
00:05:39,676 --> 00:05:43,611
our instance, when it first is created.

125
00:05:43,611 --> 00:05:47,037
And inheritance is this
ability to create a new class

126
00:05:47,037 --> 00:05:50,679
but take all, import and
effect all the capabilities

127
00:05:50,679 --> 00:05:52,429
of an existing class.

128
00:05:54,505 --> 00:05:57,401
So, object oriented is awesome.

129
00:05:57,401 --> 00:05:59,149
For the rest of this
class, we're not going to

130
00:05:59,149 --> 00:06:01,271
write any object code, we're
not going to use class at all,

131
00:06:01,271 --> 00:06:02,478
but we're going to use objects.

132
00:06:02,478 --> 00:06:03,755
Literally, you have been using objects

133
00:06:03,755 --> 00:06:05,608
from the beginning of this course.

134
00:06:05,608 --> 00:06:07,354
As soon as you said,

135
00:06:07,354 --> 00:06:08,354
Print, oops.

136
00:06:09,433 --> 00:06:13,941
As soon as you said X equals hi,

137
00:06:13,941 --> 00:06:15,588
that's an object.

138
00:06:15,588 --> 00:06:19,101
As soon as you said X.upper,

139
00:06:19,101 --> 00:06:20,847
you were calling a method.

140
00:06:20,847 --> 00:06:22,970
You've been calling a method all along.

141
00:06:22,970 --> 00:06:26,970
When you're doing something
like FH equals open,

142
00:06:28,684 --> 00:06:31,581
this thing you're getting
back, that's an object.

143
00:06:31,581 --> 00:06:35,171
Then you do FH.read or whatever,

144
00:06:35,171 --> 00:06:36,497
you're calling a method
in the dot operator.

145
00:06:36,497 --> 00:06:38,899
So, you've been using objects all along.

146
00:06:38,899 --> 00:06:41,320
I now am just finally explaining to you

147
00:06:41,320 --> 00:06:43,560
when I say "call the read method" or

148
00:06:43,560 --> 00:06:46,233
"call the upper method"
or "what's this little dot

149
00:06:46,233 --> 00:06:47,736
"and why is that there".

150
00:06:47,736 --> 00:06:50,697
So again, it's time for
us to understand that,

151
00:06:50,697 --> 00:06:53,310
but it will take you a long time

152
00:06:53,310 --> 00:06:55,201
before you encounter a problem

153
00:06:55,201 --> 00:06:58,636
that's large enough where
as part of your solution,

154
00:06:58,636 --> 00:07:00,366
you're going to make a new object.

155
00:07:00,366 --> 00:07:02,668
When you do, it's really a powerful thing.

156
00:07:02,668 --> 00:07:06,368
It's a really bad idea
for me as a teacher to say

157
00:07:06,368 --> 00:07:07,770
oh write a bunch of objects.

158
00:07:07,770 --> 00:07:09,866
It's premature for that.

159
00:07:09,866 --> 00:07:14,034
Later is when you will actually
learn how to use objects

160
00:07:14,034 --> 00:07:18,201
and you'll be like Oh thank
heaven these objects are here.

161
00:07:19,730 --> 00:07:20,896
So, that's all for now.

162
00:07:20,896 --> 00:07:24,389
Thanks for listening, see you on the net.

163
00:07:24,389 --> 00:07:26,806
(jazz music)

